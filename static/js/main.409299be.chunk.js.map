{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","addClasses","cls","Object","entries","map","name","value","join","console","log","id","className","class","startIcon","endIcon","text","App","variant","disableShadow","disabled","size","color","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA8BeA,MA3Bf,SAAgBC,GAEZ,SAASC,EAAWC,GAChB,OAAOC,OAAOC,QAAQF,GACbG,KAAI,mCAAEC,EAAF,KAAQC,EAAR,YACU,IAAVA,EAAkBD,EACT,cAATA,EAAwB,aACf,YAATA,EAAsB,WAAaC,KAEvCC,KAAK,KAMlB,OAHAC,QAAQC,IAAIT,EAAWD,IAInB,qBAAKW,GAAG,SAASC,UAAS,iBAAYX,EAAWD,IAAjD,SACI,mCACA,sBAAMa,MAAM,iBAAZ,SACKb,EAAMc,WAAad,EAAMe,UAEzBf,EAAMgB,MAAQ,gBCmBhBC,MAxCf,WAEE,OACE,sBAAKL,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,qBAAKA,UAAU,cAAf,SACA,cAAC,EAAD,MAEA,sBAAKA,UAAU,cAAf,UACA,cAAC,EAAD,CAAQM,QAAQ,YAChB,cAAC,EAAD,CAAQA,QAAQ,YAEhB,qBAAKN,UAAU,qBAAf,SACA,cAAC,EAAD,CAAQO,eAAa,MAErB,sBAAKP,UAAU,eAAf,UACA,cAAC,EAAD,CAAQQ,UAAQ,IAChB,cAAC,EAAD,CAAQA,UAAQ,EAACF,QAAQ,YAEzB,sBAAKN,UAAU,WAAf,UACA,cAAC,EAAD,CAAQE,UAAY,sBACpB,cAAC,EAAD,CAAQC,QAAU,yBAElB,sBAAKH,UAAU,WAAf,UACA,cAAC,EAAD,CAAQS,KAAM,OACd,cAAC,EAAD,CAAQA,KAAM,OACd,cAAC,EAAD,CAAQA,KAAM,UAEd,sBAAKT,UAAU,YAAf,UACA,cAAC,EAAD,CAAQI,KAAO,UAAUM,MAAQ,YACjC,cAAC,EAAD,CAAQN,KAAO,UAAUM,MAAQ,YACjC,cAAC,EAAD,CAAQN,KAAO,YAAYM,MAAQ,cACnC,cAAC,EAAD,CAAQN,KAAO,SAASM,MAAQ,cAEhC,wCAAU,mBAAGC,KAAK,mDAAR,iEACV,4CAAc,mBAAGA,KAAK,+BAAR,uBAAd,6BC1BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.409299be.chunk.js","sourcesContent":["import React from 'react' \nimport './Button.css'\n\nfunction Button(props){\n\n    function addClasses(cls){\n        return Object.entries(cls)\n                .map(([name, value]) => (\n                    (value === true) ? name :\n                    (name === \"startIcon\") ? 'start-icon' :\n                    (name === \"endIcon\") ? 'end-icon' : value\n                ))\n                .join(' ')\n    }\n\n    console.log(addClasses(props))\n\n\n    return(\n        <div id=\"elemet\" className={`button ${addClasses(props)}`}>\n            <button>\n            <span class=\"material-icons\">\n                {props.startIcon || props.endIcon}\n            </span>\n                {props.text || \"Default\"}\n            </button>\n        </div>\n    )\n}\n\nexport default Button;","import './App.css';\nimport Button from './components/Button';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Buttons</h1>\n      <div className=\"default-div\">\n      <Button/>\n      </div>\n      <div className=\"variant-div\">\n      <Button variant=\"outline\"/>\n      <Button variant=\"text\"/>\n      </div>\n      <div className=\"disable-shadow-div\">\n      <Button disableShadow/>\n      </div>\n      <div className=\"disabled-div\">\n      <Button disabled/>\n      <Button disabled variant='text'/>\n      </div>\n      <div className=\"icon-div\">\n      <Button startIcon = 'add_shopping_cart'  />\n      <Button endIcon = 'add_shopping_cart'  />\n      </div>\n      <div className=\"size-div\">\n      <Button size= 'sm' />\n      <Button size= 'md' />\n      <Button size= 'lg' />\n      </div>\n      <div className=\"color-div\">\n      <Button text = \"Default\" color = 'default' />\n      <Button text = \"Default\" color = 'primary' />\n      <Button text = \"Secondary\" color = 'secondary' />\n      <Button text = \"Danger\" color = 'danger' />\n      </div>\n      <p>Icons: <a href=\"https://material.io/resources/icons/?style=round\">https://material.io/resources/icons/?style=round</a></p>\n      <p>created by <a href=\"https://github.com/maxmiljan\">maxmiljan</a> - devChallenges.io</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}